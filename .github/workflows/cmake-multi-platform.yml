name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install dependencies on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y qt6-base-dev qt6-tools-dev qt6-tools-dev-tools build-essential libgl1-mesa-dev
        BOOST_VERSION=1.86.0
        BOOST_TAR_FILE=boost_${BOOST_VERSION//./_}.tar.gz
        BOOST_DIR=boost_${BOOST_VERSION//./_}
        wget https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VERSION}/source/${BOOST_TAR_FILE}
        tar -xzf ${BOOST_TAR_FILE}
        cd ${BOOST_DIR}
        ./bootstrap.sh
        sudo ./b2 install

    - name: Install dependencies on macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install qt boost
        echo 'export PATH="/usr/local/opt/qt/bin:$PATH"' >> ~/.bash_profile
        source ~/.bash_profile

    - name: Install dependencies on Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install qt6-sdk boost-msvc-14.2 --version=1.86.0
        setx Qt6_DIR "C:\Qt\6.2.3\msvc2019_64\lib\cmake\Qt6"
        setx PATH "%PATH%;C:\Qt\6.2.3\msvc2019_64\bin"

    - name: Configure CMake on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} -S . -DCMAKE_PREFIX_PATH=/usr/lib/qt6/cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Configure CMake on macOS
      if: matrix.os == 'macos-latest'
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} -S . -DCMAKE_PREFIX_PATH=$(brew --prefix qt)/lib/cmake/Qt6 -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Configure CMake on Windows
      if: matrix.os == 'windows-latest'
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} -S . -DCMAKE_PREFIX_PATH="C:/Qt/6.2.3/msvc2019_64/lib/cmake/Qt6" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}


    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }}

    - name: Run tests
      run: ctest --test-dir ${{ steps.strings.outputs.build-output-dir }}
